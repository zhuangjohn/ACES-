define({ "api": [  {    "type": "方法",    "url": "require/script",    "title": "导入",    "group": "000",    "description": "<p>引入框架，并构造原型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "require",            "description": "<p>后端引入</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "script",            "description": "<p>前端引入</p>"          }        ]      },      "examples": [        {          "title": "require",          "content": "require('http://www.actualchoice.club/web/johnAPI.js').john\nlet $f=new john()",          "type": "String"        },        {          "title": "script",          "content": "<script src='http://www.actualchoice.club/web/johnAPI.js'></script>\n<script>\n let $f=new john()\n</script>",          "type": "String"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "000",    "name": "__RequireScript"  },  {    "group": "001init",    "type": "用法",    "url": "$f.extent",    "title": "extend",    "description": "<p>将构造函数中的符合筛选条件的属性添加到构造函数A中，返回新构造函数</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "a",            "description": "<p>构造函数A</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "b",            "description": "<p>构造函数B</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "fitlerFn",            "description": "<p>筛选条件</p>"          }        ]      },      "examples": [        {          "title": "a",          "content": "function a(){\n this.num=0\n}\na.protype={\n add(){\n   this.num++\n }\n}",          "type": "Function"        },        {          "title": "b",          "content": "function b(){\n this.num=0\n}\nb.protype={\n init(){\n   this.num=0\n },\n reduce(){\n   this.num--\n }\n}",          "type": "Function"        },        {          "title": "filterFn",          "content": "filterFn=v=>v!=='init'",          "type": "Boolean"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.extend(a,b,filterFn)",          "type": "/"        },        {          "title": "返回",          "content": "a=function(){\n this.num=0\n}\na.protype={\n  add(){\n    this.num++\n  },\n  reduce(){\n    this.num--\n  }\n}",          "type": "Function"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "001init",    "name": "__FExtent"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_WC/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_WC_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_WC_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_johnAPI/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnAPI_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnAPI_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_johnFlow/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnFlow_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnFlow_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_ls/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_ls_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_ls_main_js",    "name": ""  },  {    "version": "1.0.0",    "type": "",    "url": "",    "filename": "./johnAPI.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__johnAPI_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__johnAPI_js",    "name": ""  },  {    "group": "cp",    "type": "用法",    "url": "$f.cpArr(data)",    "title": "cpArr",    "description": "<p>数组内组合</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>数据对象</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[1,2]",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.cpArr(data)",          "type": "/"        },        {          "title": "返回",          "content": "[\n [[1],[2]],\n [[1,2]],\n]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "cp",    "name": "__FCparrData"  },  {    "group": "cp",    "type": "用法",    "url": "$f.cpJson(sel)",    "title": "cpJson",    "description": "<p>Json组合输出,包括本身</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "sel",            "description": "<p>数据对象</p>"          }        ]      },      "examples": [        {          "title": "sel",          "content": "let sel={a:23,b:4}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.cpArr(data)",          "type": "/"        },        {          "title": "返回",          "content": "[\n {a:23},\n {b:4},\n {a:23,b:4}\n]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "cp",    "name": "__FCpjsonSel"  },  {    "group": "download",    "type": "用法",    "url": "$f.download(name,url)",    "title": "download",    "description": "<p>下载链接内容，并命名;注意跨域问题</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>文件名</p>"          },          {            "group": "Parameter",            "type": "url",            "optional": false,            "field": "url",            "description": "<p>链接</p>"          }        ]      },      "examples": [        {          "title": "name",          "content": "let name='1.html'",          "type": "String"        },        {          "title": "url",          "content": "let url='https://www.baidu.com'",          "type": "url"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.download(name,url)",          "type": "/"        },        {          "title": "返回",          "content": "保存为本地文件1.html",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "download",    "name": "__FDownloadNameUrl"  },  {    "group": "download",    "type": "用法",    "url": "$f.export(name,data,callback)",    "title": "export",    "description": "<p>将内容下载到本地</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>文件名</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>在文件下载后执行的回调函数</p>"          }        ]      },      "examples": [        {          "title": "name",          "content": "let name='1.txt'",          "type": "String"        },        {          "title": "data",          "content": "let data='jfif'",          "type": "/"        },        {          "title": "callback",          "content": "let callback=()=>{console.log(complete)}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.export(name,data,callback)",          "type": "/"        },        {          "title": "返回",          "content": "保存为本地文件1.txt",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "download",    "name": "__FExportNameDataCallback"  },  {    "group": "download",    "type": "用法",    "url": "$f.toCsv(obj,head,fileName,baseData)",    "title": "toCsv",    "description": "<p>将数据输出为CSV格式</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "obj",            "optional": false,            "field": "obj",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "head",            "description": "<p>表头</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>文件名</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "baseData",            "description": "<p>空值/错误时返回值</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj=[{a:23,b:23,c:undefined}]",          "type": "obj"        },        {          "title": "head",          "content": "let head=['b','c']",          "type": "Array"        },        {          "title": "fileName",          "content": "let fileName='2.csv'",          "type": "String"        },        {          "title": "baseData",          "content": "let baseData='johnErr'",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.toCsv(obj,head,fileName,baseData)",          "type": "/"        },        {          "title": "返回",          "content": "保存为本地文件2.csv",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "download",    "name": "__FTocsvObjHeadFilenameBasedata"  },  {    "group": "download",    "type": "用法",    "url": "$f.toXls(obj,head,fileName,baseData)",    "title": "toXls",    "description": "<p>将数据输出为CSV格式</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "obj",            "optional": false,            "field": "obj",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "head",            "description": "<p>表头</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>文件名</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "baseData",            "description": "<p>空值/错误时返回值</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj=[{a:23,b:23,c:undefined}]",          "type": "obj"        },        {          "title": "head",          "content": "let head=['b','c']",          "type": "Array"        },        {          "title": "fileName",          "content": "let fileName='2.xls'",          "type": "String"        },        {          "title": "baseData",          "content": "let baseData='johnErr'",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.toXls(obj,head,fileName,baseData)",          "type": "/"        },        {          "title": "返回",          "content": "保存为本地文件2.Xls",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "download",    "name": "__FToxlsObjHeadFilenameBasedata"  },  {    "group": "face",    "type": "用法",    "url": "$f.face(index,callback)",    "title": "face",    "description": "<p>自动创建数组，并进行遍历</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "index",            "description": "<p>数组最大值</p>"          },          {            "group": "Parameter",            "type": "callback",            "optional": false,            "field": "callback",            "description": "<p>回调函数</p>"          }        ]      },      "examples": [        {          "title": "index",          "content": "let index=3",          "type": "Number"        },        {          "title": "callback",          "content": "let callback=i=>{console.log(i)}",          "type": "callback"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.face(index,callback)",          "type": "/"        },        {          "title": "返回",          "content": "0\n1\n2",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "face",    "name": "__FFaceIndexCallback"  },  {    "group": "face",    "type": "用法",    "url": "$f.faceArr(obj,callback)",    "title": "faceArr",    "description": "<p>遍历数组</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array/Dom",            "optional": false,            "field": "obj",            "description": "<p>遍历对象</p>"          },          {            "group": "Parameter",            "type": "callback",            "optional": false,            "field": "callback",            "description": "<p>回调函数callback(v,i)</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj=[23,4]",          "type": "Array/Dom"        },        {          "title": "callback",          "content": "let callback=(v,i)=>{console.log(v)}",          "type": "callback"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.faceArr(obj,callback)",          "type": "/"        },        {          "title": "返回",          "content": "23\n4",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "face",    "name": "__FFacearrObjCallback"  },  {    "group": "face",    "type": "用法",    "url": "$f.faceJson(obj,callback)",    "title": "faceJson",    "description": "<p>遍历Json</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "obj",            "description": "<p>遍历对象</p>"          },          {            "group": "Parameter",            "type": "callback",            "optional": false,            "field": "callback",            "description": "<p>回调函数callback(v,i,key)</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={a:23,b:4}",          "type": "Json"        },        {          "title": "callback",          "content": "let callback=(v,i,key)=>{console.log(v,i,key)}",          "type": "callback"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.faceJson(obj,callback)",          "type": "/"        },        {          "title": "返回",          "content": "23,0,'a'\n4,1,'b'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "face",    "name": "__FFacejsonObjCallback"  },  {    "group": "face",    "type": "用法",    "url": "$f.makeList(list,callback)",    "title": "makeList",    "description": "<p>遍历列表</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "list",            "optional": false,            "field": "list",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>回调函数callback(item,{v,i,key})</p>"          }        ]      },      "examples": [        {          "title": "list",          "content": "let list=[{a:23},{b:5}]",          "type": "list"        },        {          "title": "callback",          "content": "let callback=(item,{v,i,key})=>{\n console.log(item.v)\n}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.makeList(list,callback)",          "type": "/"        },        {          "title": "返回",          "content": "{a: 23}\n{b: 5}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "face",    "name": "__FMakelistListCallback"  },  {    "group": "face",    "type": "用法",    "url": "$f.supperMap(arrA,arrB,callback)",    "title": "supperMap",    "description": "<p>交叉遍历</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arrA",            "description": "<p>数组A</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arrB",            "description": "<p>数组B</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>回调函数callback(v,vv,index)</p>"          }        ]      },      "examples": [        {          "title": "arrA",          "content": "let arrA=[1,2]",          "type": "Array"        },        {          "title": "arrB",          "content": "let arrB=[4,5]",          "type": "Array"        },        {          "title": "callback",          "content": "let callback=(v,vv,index)=>{console.log([v*vv,index])}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.supperMap(arrA,arrB,callback)",          "type": "/"        },        {          "title": "返回",          "content": "[4,0]\n[5,1]\n[8,2]\n[10,3]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "face",    "name": "__FSuppermapArraArrbCallback"  },  {    "group": "filter",    "type": "用法",    "url": "$f.filter(data,callback)",    "title": "filter",    "description": "<p>对数组/Json的一阶值筛选,不支持嵌套数据</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array/Json",            "optional": false,            "field": "data",            "description": "<p>筛选对象</p>"          },          {            "group": "Parameter",            "type": "callback",            "optional": false,            "field": "callback",            "description": "<p>回调函数</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={a:23,c:2}",          "type": "Array/Json/Obj"        },        {          "title": "callback",          "content": "let callback=v=>v>10",          "type": "callback"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.filter(data,callback)",          "type": "/"        },        {          "title": "返回",          "content": "{a:23}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "filter",    "name": "__FFilterDataCallback"  },  {    "group": "filter",    "type": "用法",    "url": "$f.findRoot(level,role)",    "title": "findRoot",    "description": "<p>建立权限列表，通过对权限编号的正则判断对应level的role是否有可读权限</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "set",            "description": "<p>筛选配置</p>"          }        ]      },      "examples": [        {          "title": "set",          "content": "let set={\n roleList:[{\n     area:'华东',\n     province:'浙江',\n     city:'杭州'\n   },{\n     area:'华东',\n     province:'浙江',\n     city:'宁波'\n   }],\n dataList:[{\n   role:'宁波',\n   level:'city',\n   data:23\n},{\nrole:'浙江',\nlevel:'province',\ndata:5\n}]\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.roleSet(set)\n$f.root()\n$f.findRoot('area', '华东')  //查询角色的root代码\n$f.findData('area', '华东')  //查询角色的可读数据",          "type": "/"        },        {          "title": "返回",          "content": "23",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "filter",    "name": "__FFindrootLevelRole"  },  {    "group": "filter",    "type": "用法",    "url": "$f.routes(path,data,errReplaced)",    "title": "routes",    "description": "<p>配置查询路径及错误返回</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>路径</p>"          },          {            "group": "Parameter",            "type": "Obj",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "errReplaced",            "description": "<p>错误返回</p>"          }        ]      },      "examples": [        {          "title": "path",          "content": "let path='0/a'",          "type": "String"        },        {          "title": "data",          "content": "let data=[{a:23},{a:3}]",          "type": "Obj"        },        {          "title": "errReplaced",          "content": "let errReplaced=5",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.routes(path,data,errReplaced)\n$f.run()",          "type": "/"        },        {          "title": "返回",          "content": "23",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "filter",    "name": "__FRoutesPathDataErrreplaced"  },  {    "group": "filter",    "type": "用法",    "url": "$f.superFilter(condition,arr)",    "title": "superFilter",    "description": "<p>多条件筛选列表</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "condition",            "description": "<p>多条件设置</p>"          },          {            "group": "Parameter",            "type": "ArrayJson",            "optional": false,            "field": "arr",            "description": "<p>初始列表</p>"          }        ]      },      "examples": [        {          "title": "condition",          "content": "let condition={a:v=>v>23,b:v=>v<30}",          "type": "Json"        },        {          "title": "arr",          "content": "let arr=[{a:25,b:26},{a:20,b:26}]",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.superFilter(condition,arr)",          "type": "/"        },        {          "title": "返回",          "content": "[{a:25,b:26}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "filter",    "name": "__FSuperfilterConditionArr"  },  {    "group": "filter",    "type": "用法",    "url": "$f.tableFilter(data,set)",    "title": "tableFilter",    "description": "<p>获取想要的表单</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "ArrayJson",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "set",            "description": "<p>筛选配置</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[{a:{b:23}},{a:3}]",          "type": "ArrayJson"        },        {          "title": "set",          "content": "let set={\n wantKeys:0,\n path:'a/b',\n errReplaced:'johnErr'\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.tableFilter(data,set)",          "type": "/"        },        {          "title": "返回",          "content": "[23,johnErr]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "filter",    "name": "__FTablefilterDataSet"  },  {    "group": "get",    "type": "用法",    "url": "$f.getLevel(data)",    "title": "getLevel",    "description": "<p>获取数据在数组中的位置,查无对应值返回-1</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "t",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>数组</p>"          }        ]      },      "examples": [        {          "title": "t",          "content": "let t=2",          "type": "/"        },        {          "title": "data",          "content": "let data=[2,234,]",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.getLevel(t,data)",          "type": "/"        },        {          "title": "返回",          "content": "0",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "get",    "name": "__FGetlevelData"  },  {    "group": "get",    "type": "用法",    "url": "$f.getScore(txt,testArr)",    "title": "getScore",    "description": "<p>获取数据在数组中出现的比例,</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "txt",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "testArr",            "description": "<p>数组</p>"          }        ]      },      "examples": [        {          "title": "txt",          "content": "let txt='你好'",          "type": "/"        },        {          "title": "data",          "content": "let testArr=['你好吗','你好','好的']",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.getScore(txt,testArr)",          "type": "/"        },        {          "title": "返回",          "content": "0.333333",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "get",    "name": "__FGetscoreTxtTestarr"  },  {    "group": "get",    "type": "用法",    "url": "$f.typeScore(txt,cpWord)",    "title": "typeScore",    "description": "<p>通过获取数据在数组中出现的比例,判断数据对应的键值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "txt",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Obj",            "optional": false,            "field": "cpWord",            "description": "<p>数组</p>"          }        ]      },      "examples": [        {          "title": "txt",          "content": "let txt='你好'",          "type": "/"        },        {          "title": "data",          "content": "let cpWord={\n'问候':['你好','早上好'],\n'营销':['波士顿矩阵']\n}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.typeScore(txt,cpWord)",          "type": "/"        },        {          "title": "返回",          "content": "[{type: \"问候\", score: 0.5}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "get",    "name": "__FTypescoreTxtCpword"  },  {    "group": "include",    "type": "用法",    "url": "$f.includeArr(data)",    "title": "includeArr",    "description": "<p>判断嵌套数据内是否有数组类型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={a:[2,34]}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.includeArr(data)",          "type": "/"        },        {          "title": "返回",          "content": "true",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "include",    "name": "__FIncludearrData"  },  {    "group": "include",    "type": "用法",    "url": "$f.includeJson(data)",    "title": "includeJson",    "description": "<p>判断嵌套数据内是否有Json格式类型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={a:[2,34]}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.includeJson(data)",          "type": "/"        },        {          "title": "返回",          "content": "true",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "include",    "name": "__FIncludejsonData"  },  {    "group": "is",    "type": "用法",    "url": "$f.isArray(data)",    "title": "isArray",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={b:3}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.isArray(data)",          "type": "/"        },        {          "title": "返回",          "content": "false",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "is",    "name": "__FIsarrayData"  },  {    "group": "is",    "type": "用法",    "url": "$f.isErr(data)",    "title": "isErr",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={b:3}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.isErr(data)",          "type": "/"        },        {          "title": "返回",          "content": "false",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "is",    "name": "__FIserrData"  },  {    "group": "is",    "type": "用法",    "url": "$f.isJson(data)",    "title": "isJson",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data={b:3}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.isJson(data)",          "type": "/"        },        {          "title": "返回",          "content": "ture",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "is",    "name": "__FIsjsonData"  },  {    "group": "is",    "type": "用法",    "url": "$f.isSimple(data)",    "title": "isSimple",    "description": "<p>假定String/Number为简单类型，判断初始数据是否为该类型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=undefined",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.isSimple(data)",          "type": "/"        },        {          "title": "返回",          "content": "false",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "is",    "name": "__FIssimpleData"  },  {    "group": "johnBase",    "type": "用法",    "url": "$f.keys(data)",    "title": "keys",    "description": "<p>获取数据键值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[23,24]",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.keys(data)",          "type": "/"        },        {          "title": "返回",          "content": "['0','1']",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnBase",    "name": "__FKeysData"  },  {    "group": "johnBase",    "type": "用法",    "url": "$f.length(data)",    "title": "length",    "description": "<p>获取数据长度</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data='23f'",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.length(data)",          "type": "/"        },        {          "title": "返回",          "content": "3",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnBase",    "name": "__FLengthData"  },  {    "group": "johnBase",    "type": "用法",    "url": "$f.notBlank(data)",    "title": "notBlank",    "description": "<p>去除空值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>数据对象</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[23,4,24,,undefined,23]",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.notBlank(data)",          "type": "/"        },        {          "title": "返回",          "content": "[23, 4, 24, 23]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnBase",    "name": "__FNotblankData"  },  {    "group": "johnBase",    "type": "用法",    "url": "$f.unique(data)",    "title": "unique",    "description": "<p>数组去重</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>去重对象</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[2,324,23,2,2,2,2]",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.unique(data)",          "type": "/"        },        {          "title": "返回",          "content": "[2, 324, 23]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnBase",    "name": "__FUniqueData"  },  {    "group": "johnCode",    "type": "用法",    "url": "$f.ABReCode(JsonArr)",    "title": "ABReCode",    "description": "<p>对Json数组重新编码,多层组合,返回键值+数字编号,键值为中文时返回encodeURI</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "JsonArr",            "optional": false,            "field": "JsonArr",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "JsonArr",          "content": "let JsonArr={a:[23,423,4],b:234}",          "type": "JsonArr"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.ABReCode(JsonArr)",          "type": "/"        },        {          "title": "返回",          "content": "{\naRoot:[\"a0\", \"a1\", \"a2\"],\nbRoot:[\"a0b0\"]\n}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnCode",    "name": "__FAbrecodeJsonarr"  },  {    "group": "johnCode",    "type": "用法",    "url": "$f.ACode(JsonArr)",    "title": "ACode",    "description": "<p>对Json数组分层重新编码,返回键值+数字编号,键值为中文时返回encodeURI</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "JsonArr",            "optional": false,            "field": "JsonArr",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "JsonArr",          "content": "let JsonArr={a:[23,423,4],b:23}",          "type": "JsonArr"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.ACode(JsonArr)",          "type": "/"        },        {          "title": "返回",          "content": "{\na:[0, 1, 2],\naCode:[\"a0\", \"a1\", \"a2\"],\nb:[0],\nbCode:['b0']\n}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnCode",    "name": "__FAcodeJsonarr"  },  {    "group": "johnCode",    "type": "用法",    "url": "$f.reCode(arr)",    "title": "reCode",    "description": "<p>对数组重新编码,返回数字编号</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arr",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "arr",          "content": "let arr=['afe','华东','afe']",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.reCode(arr)",          "type": "/"        },        {          "title": "返回",          "content": "[0,1,0]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnCode",    "name": "__FRecodeArr"  },  {    "group": "johnFn",    "type": "用法",    "url": "$f.goByTime(time,fn)",    "title": "goByTime",    "description": "<p>按时间间隔执行</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "time",            "description": "<p>时间设置[单个时间间隔，总时段]</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "fn",            "description": "<p>回调函数</p>"          }        ]      },      "examples": [        {          "title": "time",          "content": "let time=[500,500*5]",          "type": "Array"        },        {          "title": "fn",          "content": "let fn=i=>{console.log(i)}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.goByTime(time,fn)",          "type": "/"        },        {          "title": "返回",          "content": "0\n1\n2\n3\n4",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnFn",    "name": "__FGobytimeTimeFn"  },  {    "group": "johnFn",    "type": "用法",    "url": "$f.safe(fn)",    "title": "safe",    "description": "<p>忽略错误，安全执行</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "fn",            "description": "<p>回调函数</p>"          }        ]      },      "examples": [        {          "title": "fn",          "content": "let fn=()=>{console.log('i am safe')}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.safe(fn)",          "type": "/"        },        {          "title": "返回",          "content": "'i am safe'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnFn",    "name": "__FSafeFn"  },  {    "group": "johnFn",    "type": "用法",    "url": "$f.sleep(time)",    "title": "sleep",    "description": "<p>延迟执行，返回Promise</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Nume",            "optional": false,            "field": "time",            "description": "<p>时间设置,单位ms</p>"          }        ]      },      "examples": [        {          "title": "time",          "content": "let time=1000",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.sleep(time).then(()=>{console.log('action')})",          "type": "/"        },        {          "title": "返回",          "content": "'action'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnFn",    "name": "__FSleepTime"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.changeKeys(JsonObj,callback)",    "title": "changeKeys",    "description": "<p>改变Json的键值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "JsonObj",            "description": "<p>数据</p>"          }        ]      },      "examples": [        {          "title": "JsonObj",          "content": "let JsonObj={a:23}",          "type": "Json"        },        {          "title": "callback",          "content": "let callback=key=>key+'_b'",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.changeKeys(JsonObj)",          "type": "/"        },        {          "title": "返回",          "content": "{'a_b':23}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FChangekeysJsonobjCallback"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.changeValue(JsonObj,callback)",    "title": "changeValue",    "description": "<p>改变Json的键值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "JsonObj",            "description": "<p>数据</p>"          }        ]      },      "examples": [        {          "title": "JsonObj",          "content": "let JsonObj={a:23}",          "type": "Json"        },        {          "title": "callback",          "content": "let callback=v=>v*2",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.changeKeys(JsonObj)",          "type": "/"        },        {          "title": "返回",          "content": "{a:46}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FChangevalueJsonobjCallback"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.makeJson(obj,keys,baseData)",    "title": "makeJson",    "description": "<p>从原obj根据keys制造新的Json</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "obj",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "keys",            "description": "<p>键值组</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "baseData",            "description": "<p>空值/错误时返回值</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={a:23,b:42,c:[2,34]}",          "type": "Json"        },        {          "title": "keys",          "content": "let keys=['a','c','d']",          "type": "Array"        },        {          "title": "baseData",          "content": "let baseData=[2,4]",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.makeJson(obj,keys,baseData)",          "type": "/"        },        {          "title": "返回",          "content": "{a:23,c:[2,34],d:[2,4]}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FMakejsonObjKeysBasedata"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.merge(Json1,Json2,isReplaced)",    "title": "merge",    "description": "<p>将Json2组合到Json1中，重复部分选择是否替换,默认不替换</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "Json1",            "description": "<p>数据1</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isReplaced",            "description": "<p>重复部分选择是否替换</p>"          }        ]      },      "examples": [        {          "title": "Json1",          "content": "let Json1={a:23,c:5}",          "type": "Json"        },        {          "title": "Json2",          "content": "let Json2={b:45,a:3}",          "type": "Json"        },        {          "title": "isReplaced",          "content": "let isReplaced=true",          "type": "Boolean"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.merge(Json1,Json2,isReplaced)",          "type": "/"        },        {          "title": "返回",          "content": "{a:3,c:5,b:45}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FMergeJson1Json2Isreplaced"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.notJson(notKeys,JsonOpt)",    "title": "notJson",    "description": "<p>根据键值拒绝Json</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "notKeys",            "description": "<p>键值</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "JsonOpt",            "description": "<p>原数据</p>"          }        ]      },      "examples": [        {          "title": "notKeys",          "content": "let notKeys=['a','c']",          "type": "Json"        },        {          "title": "JsonOpt",          "content": "let JsonOpt={b:45,a:3}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.notJson(notKeys,JsonOpt)",          "type": "/"        },        {          "title": "返回",          "content": "{b:45}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FNotjsonNotkeysJsonopt"  },  {    "group": "johnJson",    "type": "用法",    "url": "$f.wantJson(wantKeys,JsonOpt,errReplaced)",    "title": "wantJson",    "description": "<p>根据键值获取Json</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "wantKeys",            "description": "<p>键值</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "JsonOpt",            "description": "<p>原数据</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "errReplaced",            "description": "<p>错误时返回</p>"          }        ]      },      "examples": [        {          "title": "wantKeys",          "content": "let wantKeys=['a','c']",          "type": "Json"        },        {          "title": "JsonOpt",          "content": "let JsonOpt={b:45,a:3}",          "type": "Json"        },        {          "title": "errReplaced",          "content": "let errReplaced='c'",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.wantJson(wantKeys,JsonOpt,errReplaced)",          "type": "/"        },        {          "title": "返回",          "content": "{a:3,c:'c'}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnJson",    "name": "__FWantjsonWantkeysJsonoptErrreplaced"  },  {    "group": "johnLocation",    "type": "用法",    "url": "$f.cookie(type,obj,time)",    "title": "cookie",    "description": "<p>对cookie进行获取，设置、剔除操作</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>操作类型get/set/remove</p>"          }        ]      },      "examples": [        {          "title": "对象",          "content": "let obj1={a:23}\nlet obj2=['PSTM','PSINO']",          "type": "obj"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.cookie('set',obj1)\n$f.cookie('get',obj2)",          "type": "/"        },        {          "title": "返回",          "content": "\"a=23\"\n{PSTM: \"PSTM=1592125169\", PSINO: \"PSINO=5\"}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnLocation",    "name": "__FCookieTypeObjTime"  },  {    "group": "johnLocation",    "type": "用法",    "url": "$f.localStorage(type,obj)",    "title": "localStorage",    "description": "<p>对缓存进行获取，设置、剔除操作</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>操作类型get/set/remove</p>"          }        ]      },      "examples": [        {          "title": "对象",          "content": "let obj1={a:23}\nlet obj2=['a','b']",          "type": "obj"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.localStorage('set',obj1)\n$f.localStorage('get',obj2)",          "type": "/"        },        {          "title": "返回",          "content": "{a:23}\n[23,null]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnLocation",    "name": "__FLocalstorageTypeObj"  },  {    "group": "johnPath",    "type": "用法",    "url": "$f.find(url)",    "title": "find",    "description": "<p>发起Get请求，返回Promise</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "url",            "optional": false,            "field": "url",            "description": "<p>返回链接</p>"          }        ]      },      "examples": [        {          "title": "url",          "content": "let url='http://www.baidu.com'",          "type": "url"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.find(url).then((res)=>{console.log(res)})",          "type": "/"        },        {          "title": "返回",          "content": "//返回百度页面HTML值",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnPath",    "name": "__FFindUrl"  },  {    "group": "johnPath",    "type": "用法",    "url": "$f.path(myHtml,callback)",    "title": "path",    "description": "<p>将HTML转化为list格式</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "HTML/String",            "optional": false,            "field": "myHtml",            "description": "<p>html对象</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>对节点内innerText回调函数</p>"          }        ]      },      "examples": [        {          "title": "myHtml",          "content": "let myHtml=$('body')[0]",          "type": "HTML/String"        },        {          "title": "callback",          "content": "let callback=(v)=>'<'+v+'>'",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.path(myHtml,callback)",          "type": "/"        },        {          "title": "返回",          "content": "返回HTML的List",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnPath",    "name": "__FPathMyhtmlCallback"  },  {    "group": "johnPath",    "type": "用法",    "url": "$f.query(myHtml,queryPath,callback)",    "title": "query",    "description": "<p>通过节点属性组合,抓取想要的页面节点</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "HTML/String",            "optional": false,            "field": "myHtml",            "description": "<p>html对象</p>"          },          {            "group": "Parameter",            "type": "String/Array",            "optional": false,            "field": "queryPath",            "description": "<p>属性筛选</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>对节点内innerText回调函数</p>"          }        ]      },      "examples": [        {          "title": "myHtml",          "content": "let myHtml=$('div')",          "type": "HTML/String"        },        {          "title": "queryPath",          "content": "let queryPath='.main'",          "type": "String/Array"        },        {          "title": "callback",          "content": "let callback=v=>v",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.query(myHtml,queryPath,callback)",          "type": "/"        },        {          "title": "返回",          "content": "返回HTML的List",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnPath",    "name": "__FQueryMyhtmlQuerypathCallback"  },  {    "group": "johnPath",    "type": "用法",    "url": "$f.setPath(opt)",    "title": "setPath",    "description": "<p>通过时间间隔发起Get请求，从而获取数据</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "json",            "optional": false,            "field": "opt",            "description": "<p>配置</p>"          }        ]      },      "examples": [        {          "title": "opt",          "content": "let opt = {\n index: 0,//初始值\n lastIndex: 5,//终值\n urlFn: index => `http://image.baidu.com/search/acjson?tn=resultjson_com&ipn=rj&ct=201326592&is=&fp=result&queryWord=ming&cl=2&lm=-1&ie=utf-8&oe=utf-8&adpicid=&st=&z=&ic=&hd=&latest=&copyright=&word=ming&s=&se=&tab=&width=&height=&face=&istype=&qc=&nc=1&fr=&expermode=&force=&pn=${index*30}&rn=30&gsm=3c&1592324318150=`, //url回调函数\n timeSet: [500, 600*5],//[时间间隔，总时间]\n resFn: (beginIndex,endIndex,data) => {$f.export('1.json',data)},//最终结果处理,回调参数:beginIndex,endIndex,data\n vCallback: v => $f.parse(v)//单个请求结果处理\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.setPath(opt)\n$f.getData()",          "type": "/"        },        {          "title": "返回",          "content": "导出数据",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnPath",    "name": "__FSetpathOpt"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.connect(Obj,changer)",    "title": "connect",    "description": "<p>将Json拼接字符串</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json/List",            "optional": false,            "field": "Obj",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "changer",            "description": "<p>拼接配置[键值连接符,结束字符,值首字符,值尾字符,末尾字符]</p>"          }        ]      },      "examples": [        {          "title": "Obj",          "content": "let Obj={a:23,b:[1,2]}",          "type": "String"        },        {          "title": "changer",          "content": "let changer=[' in( ', ' )and ', \"'\", \"'\", ')']",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.connect(Obj,changer)",          "type": "/"        },        {          "title": "返回",          "content": "\"a in( '23' )and b in( '1','2')\"",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FConnectObjChanger"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.deepReg(str,reg)",    "title": "deepReg",    "description": "<p>根据正则表达式提取对应的内容</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "str",            "description": "<p>文本内容</p>"          },          {            "group": "Parameter",            "type": "reg",            "optional": false,            "field": "reg",            "description": "<p>正则条件</p>"          }        ]      },      "examples": [        {          "title": "str",          "content": "let str='fwjhgowegj'",          "type": "String"        },        {          "title": "reg",          "content": "let reg=/w[\\w]+?g/",          "type": "reg"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.deepReg(str,reg)",          "type": "/"        },        {          "title": "返回",          "content": "[\"wjhg\", \"weg\"]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FDeepregStrReg"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.deepTest(test,testObj)",    "title": "deepTest",    "description": "<p>测试值是否符合正则表达式组</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "test",            "description": "<p>文本内容</p>"          },          {            "group": "Parameter",            "type": "JsonReg",            "optional": false,            "field": "testObj",            "description": "<p>正则条件组</p>"          }        ]      },      "examples": [        {          "title": "test",          "content": "let test='fwjhgowegj'",          "type": "String"        },        {          "title": "testObj",          "content": "let testObj={a:['w',2],b:'owg'}",          "type": "JsonReg"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.deepTest(test,testObj)",          "type": "/"        },        {          "title": "返回",          "content": "0.333",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FDeeptestTestTestobj"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.dropStr(Str,t)",    "title": "dropStr",    "description": "<p>舍弃字符串中的字符</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Str",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "t",            "description": "<p>舍弃字符</p>"          }        ]      },      "examples": [        {          "title": "Str",          "content": "let Str='fefjfoe'",          "type": "String"        },        {          "title": "t",          "content": "let t='f'",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.dropStr(Str,t)",          "type": "/"        },        {          "title": "返回",          "content": "\"ejoe\"",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FDropstrStrT"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.equat(JsonStr,connection,isQuotes)",    "title": "equat",    "description": "<p>将Json转化为序列</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "JsonStr",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "connection",            "description": "<p>链接符</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isQuotes",            "description": "<p>值首尾是否带引号</p>"          }        ]      },      "examples": [        {          "title": "JsonStr",          "content": "let Obj={a:23,b:[1,2]}",          "type": "Json"        },        {          "title": "connection",          "content": "let connection=''",          "type": "Array"        },        {          "title": "isQuotes",          "content": "let isQuotes=false",          "type": "Boolean"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.equat(JsonStr,connection,isQuotes)",          "type": "/"        },        {          "title": "返回",          "content": "'a=23&b=[1,2]'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FEquatJsonstrConnectionIsquotes"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.myTrim(x)",    "title": "myTrim",    "description": "<p>去除首尾空值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "x",            "description": "<p>文本内容</p>"          }        ]      },      "examples": [        {          "title": "x",          "content": "let x='  fwegfe wfaf '",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.myTrim(x)",          "type": "/"        },        {          "title": "返回",          "content": "'fwegfe wfaf'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FMytrimX"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.replace(data,matchData,replaceData)",    "title": "replace",    "description": "<p>将文本中符合正则的内容替换成对应值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "data",            "description": "<p>文本内容</p>"          },          {            "group": "Parameter",            "type": "Reg",            "optional": false,            "field": "matchData",            "description": "<p>正则匹配条件</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "replaceData",            "description": "<p>替换值</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data='fwegfewfaf'",          "type": "String"        },        {          "title": "matchData",          "content": "let matchData=/f/",          "type": "Reg"        },        {          "title": "replaceData",          "content": "let replaceData='我'",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.replace(data,matchData,replaceData)",          "type": "/"        },        {          "title": "返回",          "content": "\"我weg我ew我a我\"",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FReplaceDataMatchdataReplacedata"  },  {    "group": "johnString",    "type": "用法",    "url": "$f.split(x,splitArr)",    "title": "split",    "description": "<p>将文本按数组拆分成数组</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "x",            "description": "<p>文本内容</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "splitArr",            "description": "<p>拆分数组</p>"          }        ]      },      "examples": [        {          "title": "x",          "content": "let x='fwegfewfaf'",          "type": "String"        },        {          "title": "splitArr",          "content": "let splitArr=['f','g']",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.split(x,splitArr)",          "type": "/"        },        {          "title": "返回",          "content": "[\"\", \"we\", \"\", \"ew\", \"a\", \"\"]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnString",    "name": "__FSplitXSplitarr"  },  {    "group": "johnTable",    "type": "用法",    "url": "$f.createTabel()",    "title": "createTable",    "description": "<p>将数据呈现到页面固定节点中</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "list",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "ElementNode",            "optional": false,            "field": "tableId",            "description": "<p>HTML节点</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[{a:23},{b:24}]\nlet tableId='body'",          "type": "list"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.setTable(data,tableId)\n$f.createTable()",          "type": "/"        },        {          "title": "返回",          "content": "页面出现表格",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnTable",    "name": "__FCreatetabel"  },  {    "group": "johnTime",    "type": "用法",    "url": "$f.dateFtt(fmt,date)",    "title": "dateFtt",    "description": "<p>获取指定格式的时间</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "fmt",            "optional": false,            "field": "fmt",            "description": "<p>指定时间格式</p>"          },          {            "group": "Parameter",            "type": "date",            "optional": false,            "field": "date",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "date",          "content": "let fmt='yyyyMMdd hhmmss'",          "type": "date"        },        {          "title": "date",          "content": "let date='2020-6-14'",          "type": "date"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.dateFtt(fmt,date)",          "type": "/"        },        {          "title": "返回",          "content": "'20200614 000000'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnTime",    "name": "__FDatefttFmtDate"  },  {    "group": "johnTime",    "type": "用法",    "url": "$f.time(date)",    "title": "time",    "description": "<p>获取简易时间,date为空时，返回当下时间</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "date",            "optional": false,            "field": "date",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "date",          "content": "let date='2020/6/14'",          "type": "date"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.time(date)",          "type": "/"        },        {          "title": "返回",          "content": "[\"2020-06-13\", \"16:00:00\", \"000Z\"]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnTime",    "name": "__FTimeDate"  },  {    "group": "johnUrl",    "type": "用法",    "url": "$f.setUrl(url)",    "title": "url",    "description": "<p>建立Url对象，并调整Params参数,或者获取</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "url",            "optional": false,            "field": "url",            "description": "<p>初始url</p>"          },          {            "group": "Parameter",            "type": "ArrayJson",            "optional": false,            "field": "paramsObj",            "description": "<p>Params参数</p>"          }        ]      },      "examples": [        {          "title": "myUrl",          "content": "let myUrl='http://www.baidu.com'",          "type": "url"        },        {          "title": "paramsObj",          "content": "let paramsObj=[{a:2,b:3}]",          "type": "ArrayJson"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.setUrl(myUrl)\n$f.setParams(paramsObj)\n$f.getParams('a')",          "type": "/"        },        {          "title": "返回",          "content": "{a:\"2\"}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "johnUrl",    "name": "__FSeturlUrl"  },  {    "group": "to",    "type": "用法",    "url": "$f.csvDataToList(data,headNum,segTag)",    "title": "csvDataToJson",    "description": "<p>将字符串/一维数组数据根据行列分隔符切割成list格式,</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String/Array",            "optional": false,            "field": "data",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "headNum",            "description": "<p>表头列数</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "segTag",            "description": "<p>行列分隔符默认[' ',',']</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data='0,1,2,3 4,5,6,7'",          "type": "String/Array"        },        {          "title": "headNum",          "content": "let headNum=4",          "type": "Number"        },        {          "title": "segTag",          "content": "let segTag=[' ',',']",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.csvDataToList(data,headNum,segTag)",          "type": "/"        },        {          "title": "返回",          "content": "[{0:4,1:5,2,:6,3:7}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FCsvdatatolistDataHeadnumSegtag"  },  {    "group": "to",    "type": "用法",    "url": "$f.keyValueToJson(keyValue)",    "title": "keyValueToJson",    "description": "<p>将key-value字符串转为Json</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "keyValue",            "description": "<p>数据</p>"          }        ]      },      "examples": [        {          "title": "keyValue",          "content": "let data=`req: 2\ncsor: 0`",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.keyValueToJson(keyValue)",          "type": "/"        },        {          "title": "返回",          "content": "{req:2,csor:0}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FKeyvaluetojsonKeyvalue"  },  {    "group": "to",    "type": "用法",    "url": "$f.toArray(data)",    "title": "toArray",    "description": "<p>将初始数据转为数组格式,如果本身是数组，返回结果不变，否则返回[原始数据]，错误数据类型返回['']</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "data",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=234",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.toArray(data)",          "type": "/"        },        {          "title": "返回",          "content": "[23]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FToarrayData"  },  {    "group": "to",    "type": "用法",    "url": "$f.toJson(v,key)",    "title": "toJson",    "description": "<p>将初始数据转为Json格式,如果本身是Json，返回结果不变，否则返回{[key]:原始数据}，错误数据类型返回[[key]:'']; 若不设置key，默认为johnKey</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "v",            "description": "<p>数据</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "key",            "description": "<p>键值</p>"          }        ]      },      "examples": [        {          "title": "v",          "content": "let v=234",          "type": "/"        },        {          "title": "key",          "content": "let key=a",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.toJson(v,key)",          "type": "/"        },        {          "title": "返回",          "content": "{a:234}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FTojsonVKey"  },  {    "group": "to",    "type": "用法",    "url": "$f.toList(callback)",    "title": "toList",    "description": "<p>将HTML具有表格属性的指定内容转化为表格形式</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "HTML/String",            "optional": false,            "field": "myHtml",            "description": "<p>html对象</p>"          },          {            "group": "Parameter",            "type": "elementNode",            "optional": false,            "field": "tr",            "description": "<p>行属性选择器</p>"          },          {            "group": "Parameter",            "type": "elementNode",            "optional": false,            "field": "td",            "description": "<p>列属性选择器</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "vCallback",            "description": "<p>单元格数据回调</p>"          }        ]      },      "examples": [        {          "title": "myHtml",          "content": "let myHtml=$('#content_left')",          "type": "HTML/String"        },        {          "title": "tr",          "content": "let tr='.result'",          "type": "elementNode"        },        {          "title": "td",          "content": "let td='div'",          "type": "elementNode"        },        {          "title": "callback",          "content": "let callback=v=>v",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.setHtml(myHtml)\n$f.setTr(tr)\n$f.setTd(td)\n$f.toList(v=>v.innerText)",          "type": "/"        },        {          "title": "返回",          "content": "返回HTML的List",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FTolistCallback"  },  {    "group": "to",    "type": "用法",    "url": "$f.toNumString(num,len)",    "title": "toNumString",    "description": "<p>将数字转为固定位数的序号</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "num",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "len",            "description": "<p>位数</p>"          }        ]      },      "examples": [        {          "title": "num",          "content": "let num= 23",          "type": "Number"        },        {          "title": "len",          "content": "let len=5",          "type": "Number"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.toNumString(num,len)",          "type": "/"        },        {          "title": "返回",          "content": "00023",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FTonumstringNumLen"  },  {    "group": "to",    "type": "用法",    "url": "$f.toSql()",    "title": "toSql",    "description": "<p>生成sql语句</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "Opt",            "description": "<p>Sql配置</p>"          }        ]      },      "examples": [        {          "title": "Opt",          "content": "let Opt={\n     url: '',\n     need: ['a','b','year'],\n     table: 'table',\n     whereIn: {\n       year:[2018,2017]\n     },\n     whereLike: {\n     },\n     db: 'db',\n     id: 'sa',\n     distinct: '1',\n     group: ['a','b','year'],\n     order: ['a'],\n     data: {\n       a:1,\n       b:2,\n       year:2018\n       }\n   }",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.setSql(Opt)\n$f.toSql() //select/insert/update/delete",          "type": "/"        },        {          "title": "返回",          "content": "//sql语句",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FTosql"  },  {    "group": "to",    "type": "用法",    "url": "$f.totext(startStr,endStr,arr)",    "title": "totext",    "description": "<p>将字符串数组的值拼接上首尾字符</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "startStr",            "description": "<p>开始字符</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arr",            "description": "<p>字符串数组</p>"          }        ]      },      "examples": [        {          "title": "startStr",          "content": "let startStr ='f'",          "type": "String"        },        {          "title": "endStr",          "content": "let endStr='g'",          "type": "String"        },        {          "title": "arr",          "content": "let arr=[23,324]",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.totext(startStr,endStr,arr)",          "type": "/"        },        {          "title": "返回",          "content": "['f23g','f324g']",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "to",    "name": "__FTotextStartstrEndstrArr"  },  {    "group": "trans",    "type": "用法",    "url": "$f.arrPeer(arrA,arrB,str)",    "title": "arrPeer",    "description": "<p>使数组等长</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arrA",            "description": "<p>数组A</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "arrB",            "description": "<p>数组B</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "str",            "description": "<p>空值或错误时返回值</p>"          }        ]      },      "examples": [        {          "title": "arrA",          "content": "let arrA=[2,3]",          "type": "Array"        },        {          "title": "arrB",          "content": "let arrB=[5]",          "type": "Array"        },        {          "title": "str",          "content": "let str=6",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.arrPeer(arrA,arrB,str)",          "type": "/"        },        {          "title": "返回",          "content": "{\n arrA:[2,3],\n arrB:[5,6]\n}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FArrpeerArraArrbStr"  },  {    "group": "trans",    "type": "用法",    "url": "$f.flat(obj)",    "title": "flat",    "description": "<p>扁平化Json数据为列表格式{[]}</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "obj",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={a:23,b:{c:242}}",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.flat(obj)",          "type": "/"        },        {          "title": "返回",          "content": "{\n flatKeys:[\"a\", \"b/c\"]\n flatData:[{a: 23, b/c: 242}]\n}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FFlatObj"  },  {    "group": "trans",    "type": "用法",    "url": "$f.jsonFlat(obj,index)",    "title": "jsonFlat",    "description": "<p>扁平化Json数据，第一层为数组</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "obj",            "description": "<p>初始数据</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "index",            "description": "<p>初始键值,一般为0</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={a:23,b:{c:242}}",          "type": "/"        },        {          "title": "index",          "content": "let index=0",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.jsonFlat(obj,index)",          "type": "/"        },        {          "title": "返回",          "content": "{\n allKeys:[\"0/a\", \"0/b/c\"],\n flatData:{0/a: 23, 0/b/c: 242}\n}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FJsonflatObjIndex"  },  {    "group": "trans",    "type": "用法",    "url": "$f.parse(obj)",    "title": "parse",    "description": "<p>将嵌套json字符串转化为Json格式</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "objString",            "optional": false,            "field": "obj",            "description": "<p>数据</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj=`{\"a\":{\"b\":2}}`",          "type": "objString"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.parse(obj)",          "type": "/"        },        {          "title": "返回",          "content": "{a:{b:2}}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FParseObj"  },  {    "group": "trans",    "type": "用法",    "url": "$f.peer(objA,objB,value)",    "title": "peer",    "description": "<p>使得objA与objB等长,新键的值返回value</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "objA",            "description": "<p>数据A</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "objB",            "description": "<p>数据B</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "value",            "description": "<p>空值/错误时返回值</p>"          }        ]      },      "examples": [        {          "title": "objA",          "content": "let objA={a:23}",          "type": "Json"        },        {          "title": "objB",          "content": "let objA={b:4}",          "type": "Json"        },        {          "title": "value",          "content": "let value=[2,4]",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.peer(objA,objB,value)",          "type": "/"        },        {          "title": "返回",          "content": "{a:23,b:[2,4]}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FPeerObjaObjbValue"  },  {    "group": "trans",    "type": "用法",    "url": "$f.range(data)",    "title": "range",    "description": "<p>获取数据键值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>数组首尾值设定,注意数组输出不包括尾值</p>"          }        ]      },      "examples": [        {          "title": "data",          "content": "let data=[3,5]",          "type": "/"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.range(data)",          "type": "/"        },        {          "title": "返回",          "content": "[3,4]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FRangeData"  },  {    "group": "trans",    "type": "用法",    "url": "$f.tranList(obj)",    "title": "tranList",    "description": "<p>旋转列表数据</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "jsonArr",            "optional": false,            "field": "obj",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={a:[23,45],b:[3]}",          "type": "jsonArr"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.tranList(obj)",          "type": "/"        },        {          "title": "返回",          "content": "[{a:23,b:3},{a:45,b:undefined}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FTranlistObj"  },  {    "group": "trans",    "type": "用法",    "url": "$f.trans(ArrJson)",    "title": "trans",    "description": "<p>旋转列表数据</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "ArrJson",            "optional": false,            "field": "ArrJson",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "ArrJson",          "content": "let ArrJson=[{a:23,b:3},{a:45}]",          "type": "ArrJson"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$f.trans(ArrJson)",          "type": "/"        },        {          "title": "返回",          "content": "{a:[23,45],b:[3,undefined]}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnAPI.js",    "groupTitle": "trans",    "name": "__FTransArrjson"  }] });
