define({ "api": [  {    "group": "000",    "type": "方法",    "url": "require",    "title": "导入",    "description": "<p>引入框架，并构造原型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "time",            "optional": false,            "field": "runTime",            "description": "<p>启动时间</p>"          },          {            "group": "Parameter",            "type": "filePath",            "optional": false,            "field": "originPatn",            "description": "<p>文件路径</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "执行",          "content": "let runTime = new Date().getTime() //启动时间\nlet originPath = '/Users/zhuangzhuangwu/Documents/GitHub' //文件路径\nlet $work = require(originPath + '/cityWatcher/johnAPI/johnFlow').johnFlow",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnFlow.js",    "groupTitle": "000",    "name": "__Require"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_johnAPI/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______apidoc_johnAPI_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______apidoc_johnAPI_main_js",    "name": ""  },  {    "version": "1.0.0",    "type": "",    "url": "",    "filename": "./johnFlow.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______johnFlow_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______johnFlow_js",    "name": ""  },  {    "group": "run",    "type": "方法",    "url": "clusterGo(name,timeSet)",    "title": "分批执行",    "description": "<p>如果任务比较多可以分批进行，设置执行时间梯度</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>任务名</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "timeSet",            "description": "<p>时间间隔，[启动间隔，总时长基数]</p>"          }        ]      },      "examples": [        {          "title": "name",          "content": "let name='openWeb'",          "type": "String"        },        {          "title": "timeSet",          "content": "let timeSet=[5000,5500]// 每隔5000ms执行一行命令，但是总时长为5500ms*命令总长度",          "type": "Array"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$work.clusterGo(name,timeSet)",          "type": "/"        },        {          "title": "返回",          "content": "//后台按顺序，时间间隔执行任务",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnFlow.js",    "groupTitle": "run",    "name": "__ClustergoNameTimeset"  },  {    "group": "run",    "type": "方法",    "url": "run(name,connect)",    "title": "执行",    "description": "<p>执行任务</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>任务名</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "connect",            "description": "<p>DOS执行链接符，默认&amp;&amp;表示第一个命令执行成功后执行第二个</p>"          }        ]      },      "examples": [        {          "title": "name",          "content": "let name='openWeb'",          "type": "String"        },        {          "title": "connect",          "content": "let connect='&&'",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$work.run(name,connect)",          "type": "/"        },        {          "title": "返回",          "content": "//后台按顺序执行任务",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnFlow.js",    "groupTitle": "run",    "name": "__RunNameConnect"  },  {    "group": "set",    "type": "方法",    "url": "set(workflowConfig)",    "title": "配置",    "description": "<p>配置执行任务</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "workflowConfig",            "description": "<p>任务清单</p>"          }        ]      },      "examples": [        {          "title": "workflowConfig",          "content": "let workflowConfig = {\n//打开百度后打开谷歌,只要执行了open 后就会执行第二条命令，而不在乎百度是否加载成功\n openWeb:{\n   000:`open 'http://www.baidu.com'`,\n   001:`open 'https://weixin.sogou.com/'`\n }\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$work.set(workflowConfig)",          "type": "/"        },        {          "title": "返回",          "content": "$work",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./johnFlow.js",    "groupTitle": "set",    "name": "__SetWorkflowconfig"  }] });
