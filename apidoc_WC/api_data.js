define({ "api": [  {    "group": "000",    "type": "方法",    "url": "require/script",    "title": "导入",    "description": "<p>引入框架，并构造原型</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "require",            "description": "<p>后端引入</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "script",            "description": "<p>前端引入</p>"          },          {            "group": "Parameter",            "type": "/",            "optional": false,            "field": "temperMonkey",            "description": "<p>油桃引入，在浏览器控制台进行页面操作</p>"          }        ]      },      "examples": [        {          "title": "require",          "content": "require('http://www.actualchoice.club/web/johnAPI.js).john\nrequire('http://www.actualchoice.club/web/WC.js').WC\nlet href='http://www.baidu.com'\nlet $f=new john()\nlet $page=new WC(href)",          "type": "String"        },        {          "title": "script",          "content": "<script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\"></script>\n<srcipt src='http://www.actualchoice.club/web/johnAPI.js'></script)\n<script src='http://www.actualchoice.club/web/WC.js'></script>\n<script>\n let $f=new john()\n let href='http://www.baidu.com'\n let $page=new WC(href)\n</script>",          "type": "String"        },        {          "title": "temperMonkey",          "content": "// ==UserScript==\n// @name         000接口数据\n// @namespace    http://tampermonkey.net/\n// @version      0.1\n// @description  try to take over the world!\n// @author       You\n// @match        https://www.showapi.com/*\n// @grant        unsafeWindow\n// @grant GM_download\n// @grant GM_xmlhttpRequest\n// @require https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\n// @require http://www.actualchoice.club/web/johnAPI.js\n// @require http://www.actualchoice.club/web/WC.js\n// ==/UserScript==\nlet $f=new john(）\nlet $page=new WC(location.href)\nunsafeWindow.$f=$f //将$f引入浏览器\nunsafeWindow.$page=$page //将$page引入浏览器\n//按F12 进入控制台进行页面计算",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "000",    "name": "__RequireScript"  },  {    "version": "1.0.0",    "type": "",    "url": "",    "filename": "./WC.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______WC_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_cityWatcher_johnAPI______WC_js",    "name": ""  },  {    "group": "base",    "type": "方法",    "url": "$page.matchType(src)",    "title": "判断链接内容是否为图片",    "description": "<p>通过监测链接中是否存在图片格式的字符，比如png，从而判断链接是否为图片</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "src",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "src",          "content": "let src='jfoiwefwe.png'",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.matchType(src)",          "type": "/"        },        {          "title": "返回",          "content": "'png'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "base",    "name": "__PageMatchtypeSrc"  },  {    "group": "base",    "type": "方法",    "url": "$page.setParams(paramsObj)",    "title": "配置链接params",    "description": "<p>更改params值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "paramsObj",            "description": "<p>params值</p>"          }        ]      },      "examples": [        {          "title": "paramsObj",          "content": "let paramsObj={\n   a:1,\n   b:2\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setParams(paramsObj)",          "type": "/"        },        {          "title": "返回",          "content": "'http://www.baidu.com?a=1&b=2",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "base",    "name": "__PageSetparamsParamsobj"  },  {    "group": "base",    "type": "方法",    "url": "$page.vCallback(v)",    "title": "基础文本格式处理",    "description": "<p>剔除对象中空格、换行，英文逗号等</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "v",            "description": "<p>初始数据</p>"          }        ]      },      "examples": [        {          "title": "v",          "content": "let v='flejf,'",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.vCallback(v)",          "type": "/"        },        {          "title": "返回",          "content": "'flejf_'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "base",    "name": "__PageVcallbackV"  },  {    "group": "cpSearch",    "type": "方法",    "url": "$page.getCpHref(cpFnName,paramsCallback)",    "title": "复合搜索链接",    "description": "<p>原页面Params中对应的值格式为复合标签和输入值时启用，如http://www.baidu.com?wd=case,jwefjoew</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "cpFnName",            "description": "<p>配置标签</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "paramsCallback",            "description": "<p>对params进行回调，返回新的params</p>"          }        ]      },      "examples": [        {          "title": "cpFnName",          "content": "let cpFnName ='case'",          "type": "Json"        },        {          "title": "paramsCallback",          "content": "let paramsCallback=v=>v+' hello'",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getCPHref(cpFnName,paramsCallback)",          "type": "/"        },        {          "title": "返回",          "content": "[{\n}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "cpSearch",    "name": "__PageGetcphrefCpfnnameParamscallback"  },  {    "group": "cpSearch",    "type": "方法",    "url": "$page.setCpConfig(set)",    "title": "配置复合搜索",    "description": "<p>@apiParam {Json} set 配置CP函数</p>",    "parameter": {      "examples": [        {          "title": "set",          "content": "let set ={case:['wd',' ']}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setCpConfig(set)",          "type": "/"        },        {          "title": "返回",          "content": "{cpFn:{\n connect:(a,b)=>`${a} ${b}`\n},\nparams:{case:'wd'}}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "cpSearch",    "name": "__PageSetcpconfigSet"  },  {    "group": "download",    "type": "方法",    "url": "$page.downHtml(name,obj,dom,callback,htmlCallback)",    "title": "获取指定节点",    "description": "<p>@apiParam {dom} dom 目标页面节点，默认为document.body</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>文件命名，需带后缀,默认返回'test.html'</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "obj",            "description": "<p>所需的节点,默认返回'*'</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>节点筛选函数,默认返回true</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "htmlCallback",            "description": "<p>结果Html页面回调htmlCallback(Html)</p>"          }        ]      },      "examples": [        {          "title": "dom",          "content": "let dom=$('div')[0]",          "type": "dom"        },        {          "title": "name",          "content": "let name='fjewof.html'",          "type": "String"        },        {          "title": "obj",          "content": "let obj=['div','img']",          "type": "Array"        },        {          "title": "callback ",          "content": "let callback=myNode=>/hello/.test(myNode.innerText)",          "type": "Function"        },        {          "title": "htmlCallback",          "content": "let htmlCallback=myHtml=>{\n$('body',myHtml).append('<p>结果</p>')\nreturn myHtml\n}",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.downHtml(name,obj,dom,callback,htmlCallback)",          "type": "/"        },        {          "title": "返回",          "content": "//返回新页面",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "download",    "name": "__PageDownhtmlNameObjDomCallbackHtmlcallback"  },  {    "group": "download",    "type": "方法",    "url": "$page.downImg(fileName,dom,scrollSet,timeSetCallback,imgSelector,attrSet)",    "title": "下载图片",    "description": "<p>@apiParam {String} fileName 文件命名，需带后缀,默认返回'test'</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "dom",            "description": "<p>目标页面节点，默认为document.body</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "scrollSet",            "description": "<p>滚动设置</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "timeSetCallback",            "description": "<p>时间回调函数，控制下载发起速度</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "imgSelector",            "description": "<p>节点选择器，默认为'img'</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "attrSet",            "description": "<p>所需的属性</p>"          }        ]      },      "examples": [        {          "title": "fileName",          "content": "let fileName='ffew'",          "type": "String"        },        {          "title": "dom",          "content": "let dom=$('div')[0]",          "type": "dom"        },        {          "title": "scrollSet",          "content": "let scrollSet=[0,1000,500,10]",          "type": "Array"        },        {          "title": "timeSetCallback",          "content": "let timeSetCallback=len=>[1000,1200*len]",          "type": "Function"        },        {          "title": "imgSelector ",          "content": "let imgSelector='img'",          "type": "String"        },        {          "title": "attrSet ",          "content": "let attrSet={src:'src',attr_src:'data-src'}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.downImg(fileName,dom,scrollSet,timeSetCallback,imgSelector,attrSet)",          "type": "/"        },        {          "title": "返回",          "content": "//下载图片",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "download",    "name": "__PageDownimgFilenameDomScrollsetTimesetcallbackImgselectorAttrset"  },  {    "group": "download",    "type": "方法",    "url": "$page.setListConfig(opt)",    "title": "下载表单",    "description": "<p>@apiParam {Json} opt 表单选择设置</p>",    "parameter": {      "examples": [        {          "title": "opt ",          "content": "let opt={\n test:{\n table:'#main',\n tr:'div',\n td:['span','a']\n }\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setListConfig(opt)\n$page.getList('test')",          "type": "/"        },        {          "title": "返回",          "content": "//下载表格",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "download",    "name": "__PageSetlistconfigOpt"  },  {    "group": "get",    "type": "方法",    "url": "$page.getAttr(htmlNode,attrSet,isJson)",    "title": "获取节点属性",    "description": "<p>获取节点属性</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "htmlNode",            "description": "<p>获取对象</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "attrSet",            "description": "<p>目标属性//如果是attribute则键值需要符合正则attr,默认返回a、img、href、src</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isJson",            "description": "<p>是否返回Json</p>"          }        ]      },      "examples": [        {          "title": "htmlNode",          "content": "let htmlNode=$('body')",          "type": "dom"        },        {          "title": "attrSet",          "content": "let attrSet={attr:['data-href'],text:'innerText'}",          "type": "Json"        },        {          "title": "isJson",          "content": "let isJson=true",          "type": "Boolean"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getAttr(htmlNode,attrSet,isJson)",          "type": "/"        },        {          "title": "返回",          "content": "[{}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGetattrHtmlnodeAttrsetIsjson"  },  {    "group": "get",    "type": "方法",    "url": "$page.getHref(dom,paramsJson)",    "title": "获取页面内的链接",    "description": "<p>获取页面内非图片、非Js、非css链接,并添加params</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "dom",            "description": "<p>获取对象</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "paramsJson",            "description": "<p>params</p>"          }        ]      },      "examples": [        {          "title": "dom",          "content": "let dom=$('body')[0]",          "type": "dom"        },        {          "title": "paramsJson",          "content": "let paramsJson={a:23,b:5}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getHref(dom,paramsJson)",          "type": "/"        },        {          "title": "返回",          "content": "//['http://www.baidu.com?a=23&b=5,...]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGethrefDomParamsjson"  },  {    "group": "get",    "type": "方法",    "url": "$page.getImg(dom,imgSelector,attrSet,isJson)",    "title": "获取页面中的图片链接",    "description": "<p>通过配置dom，选择器及所需的属性，获取页面图片参数，返回Promise</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "dom",            "description": "<p>目标页面节点，默认为document</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "imgSelector",            "description": "<p>节点选择器，默认为'img'</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "attrSet",            "description": "<p>所需的属性</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isJson",            "description": "<p>结果是否返回Json</p>"          }        ]      },      "examples": [        {          "title": "dom",          "content": "let dom=$('div')[0]",          "type": "dom"        },        {          "title": "imgSelector ",          "content": "let imgSelector='img'",          "type": "String"        },        {          "title": "attrSet",          "content": "let attrSet={src:'src',attr_alt:'alt'}",          "type": "String"        },        {          "title": "isJson",          "content": "let isJson=true",          "type": "Boolean"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getImg(dom,imgSelector,attrSet,isJson).then(imgList=>{console.log(imgList)})",          "type": "/"        },        {          "title": "返回",          "content": "[{\nsrc:'xx',\nalt:'xx'\n}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGetimgDomImgselectorAttrsetIsjson"  },  {    "group": "get",    "type": "方法",    "url": "$page.getKeywords(testTap,tap,dom)",    "title": "获取关键词",    "description": "<p>根据预设的关键词列表,对当前页面获取关键词，并添加标签</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "testTap",            "description": "<p>参考对象，来自cpConfig.cpWord中的键值</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tap",            "description": "<p>行数据添加标签</p>"          },          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "dom",            "description": "<p>预设Html对象</p>"          }        ]      },      "examples": [        {          "title": "testTap",          "content": "let testTap='case'",          "type": "String"        },        {          "title": "tap ",          "content": "let tap={a:2}",          "type": "Json"        },        {          "title": "dom",          "content": "let dom=$('div')[0]",          "type": "dom"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getKeywords(testTap,tap,dom)",          "type": "/"        },        {          "title": "返回",          "content": "//获得页面dom中的关键词",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGetkeywordsTesttapTapDom"  },  {    "group": "get",    "type": "方法",    "url": "$page.getList(type,attrSet,dom,stopDown,callback,tags)",    "title": "获取表单",    "description": "<p>@apiParam {String} type 从表单配置中调出目标配置</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "attrSet",            "description": "<p>需要获取的属性</p>"          },          {            "group": "Parameter",            "type": "dom",            "optional": false,            "field": "dom",            "description": "<p>目标页面节点,默认为listConfig中的table标签对应节点</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "stopDown",            "description": "<p>是否阻止下载</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>对结果进行回调</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tags",            "description": "<p>行数据添加标签</p>"          }        ]      },      "examples": [        {          "title": "type",          "content": "let type='table'",          "type": "String"        },        {          "title": "attrSet ",          "content": "let attrSet={src:'src',attr_src:'data-src'}",          "type": "Json"        },        {          "title": "dom",          "content": "let dom=$('div')",          "type": "dom"        },        {          "title": "stopDown ",          "content": "let stopDown=true",          "type": "Boolean"        },        {          "title": "callback",          "content": "let callback=>v=>{console.log(v)}",          "type": "Function"        },        {          "title": "tags",          "content": "let tags={a:23}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getList(type,attrSet,dom,stopDown,callback,tags)",          "type": "/"        },        {          "title": "返回",          "content": "//[{a:23}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGetlistTypeAttrsetDomStopdownCallbackTags"  },  {    "group": "get",    "type": "方法",    "url": "$page.getParams(keys)",    "title": "获取链接params",    "description": "<p>获取params值</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "keys",            "description": "<p>params值</p>"          }        ]      },      "examples": [        {          "title": "keys",          "content": "let keys='a'",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getParams(keys)",          "type": "/"        },        {          "title": "返回",          "content": "{a:1}",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageGetparamsKeys"  },  {    "group": "get",    "type": "方法",    "url": "$page.setTestConfig(Opt)",    "title": "页面节点打分",    "description": "<p>@apiParam {Json} Opt 配置打分标准</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "attrSet",            "description": "<p>需要获取的属性</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>对结果进行回调</p>"          }        ]      },      "examples": [        {          "title": "Opt ",          "content": "let Opt={\n a:['营销','案例']\n}",          "type": "Json"        },        {          "title": "attrSet ",          "content": "let attrSet={\n title:[$('div'),{text:'innerText'}]\n}",          "type": "Json"        },        {          "title": "callback",          "content": "let callback=v=>v",          "type": "Function"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setTestConfig(Opt)\n$page.getListScore(attrSet,callback)",          "type": "/"        },        {          "title": "返回",          "content": "[{title:23,aScore:0.333}]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "get",    "name": "__PageSettestconfigOpt"  },  {    "group": "init",    "type": "方法",    "url": "$page.doWhile(obj)",    "title": "配置条件启动器",    "description": "<p>对obj符合指定条件的进行所有挂载在该页面的函数</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "obj",            "description": "<p>条件列表，obj中的键值用_分割出函数名称</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={\n   baidu_click:$page.getParams('a').a==1 //当页面position为baidu，及params存在a==1时执行 click动作\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.doWhile(obj)",          "type": "/"        },        {          "title": "返回",          "content": "//当baidu的链接params中a==1时，执行百度所有函数",          "type": "/"        },        {          "title": "延伸",          "content": "//自动根据页面的函数列表配置启动参数\n$f.faceJson($page.pageFn,(v,i,key)=>{\n$page.doWhile({\n    [key]:$page.getParams(`${key}Go`)[`${key}Go`]==1,\n})\n})",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageDowhileObj"  },  {    "group": "init",    "type": "方法",    "url": "$page.getPosition()",    "title": "配置页面标签",    "description": "<p>对符合不同正则的页面链接赋予不同的标签，用于后续函数挂载</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "pageConfig",            "description": "<p>页面标签正则</p>"          }        ]      },      "examples": [        {          "title": "pageConfig",          "content": "let $page.pageConfig={\n default:/https?/,\n baidu:/www.baidu.com/\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getPosition()",          "type": "/"        },        {          "title": "返回",          "content": "'baidu'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageGetposition"  },  {    "group": "init",    "type": "方法",    "url": "$page.getTime(format,time)",    "title": "配置页面的时间",    "description": "<p>将当前时间/指定时间设置为$page的时间</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "time",            "optional": false,            "field": "format",            "description": "<p>时间格式</p>"          },          {            "group": "Parameter",            "type": "time",            "optional": false,            "field": "time",            "description": "<p>时间</p>"          }        ]      },      "examples": [        {          "title": "format",          "content": "let format='yyyyMMdd'",          "type": "time"        },        {          "title": "time",          "content": "let time='Thu Jan 01 1970 13:36:40 GMT+0800 (中国标准时间)'",          "type": "time"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getTime(format,time)",          "type": "/"        },        {          "title": "返回",          "content": "$page.time='19700101'",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageGettimeFormatTime"  },  {    "group": "init",    "type": "方法",    "url": "$page.setBtn(obj)",    "title": "配置页面按钮",    "description": "<p>在页面指定位置配置函数按钮</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "obj",            "description": "<p>按钮配置</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "// 有且仅当obj中的键值与$page.position相同时执行\nlet obj={\n default:['body','john','console']\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setBtn(obj)",          "type": "/"        },        {          "title": "返回",          "content": "//页面body出现按钮，具备class属性john,绑定函数console",          "type": "/"        },        {          "title": "延伸",          "content": "//根据$page的执行列表自动配置按钮\n$page.getPosition()\n$f.safe(()=>{\n$f.faceJson($page.pageConfig,(v,i,key)=>{\n    $page.setBtn({\n       [key]:['body','',`执行${key}>>`],\n    })\n })\n})",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageSetbtnObj"  },  {    "group": "init",    "type": "方法",    "url": "$page.setBtnConfig(opt)",    "title": "批量配置页面按钮",    "description": "<p>批量为不同页面在页面指定位置配置函数按钮</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "opt",            "description": "<p>按钮配置</p>"          }        ]      },      "examples": [        {          "title": "opt",          "content": "let opt={\n   baidu:['body',' ','console']\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.getPosition()\n$page.setBtnConfig(opt)",          "type": "/"        },        {          "title": "返回",          "content": "//当页面跳转到百度时，自动添加该按钮",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageSetbtnconfigOpt"  },  {    "group": "init",    "type": "方法",    "url": "$page.setWebTaskConfig(opt)",    "title": "配置页面打开任务",    "description": "<p>按计划执行页面打开任务。赋予每个函数一个任务名称，通过调用任务名称进行启动</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "opt",            "description": "<p>执行配置</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "taskName",            "description": "<p>任务名称</p>"          }        ]      },      "examples": [        {          "title": "opt",          "content": "let opt={\nbaiduListen:{\n   baidu:{\n     url:'https://www.baidu.com',\n     fn:['listDownload']\n   }\n }\n}",          "type": "Json"        },        {          "title": "taskName",          "content": "let taskName='baiduListen'",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setWebTaskConfig(opt)\n$page.doTask(taskName)",          "type": "/"        },        {          "title": "返回",          "content": "//打开网页 http://www.baidu.com?listDownload=1",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "init",    "name": "__PageSetwebtaskconfigOpt"  },  {    "group": "operate",    "type": "方法",    "url": "$page.scroll(num,scrollSize,sleepTime,maxNum,callback)",    "title": "页面滚动",    "description": "<p>按条件滚动页面</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "num",            "description": "<p>初始位置，默认为0</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "scrollSize",            "description": "<p>滚动步长</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "maxNum",            "description": "<p>最大页面编号</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "sleepTime",            "description": "<p>延迟时间,默认1000ms</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>滚动结束后执行函数</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let {num,scrollSize,sleepTime,maxNum,callback}={\n num:0,\n scrollSize:1000,\n sleepTime:500,\n maxNum:200,\n callback:()=>{console.log('i am here')}\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.scroll(num,scrollSize,sleepTime,maxNum,callback)",          "type": "/"        },        {          "title": "返回",          "content": "//页面每500ms滚动一次，每次1000px,如果未能触底，最多滚动200",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "operate",    "name": "__PageScrollNumScrollsizeSleeptimeMaxnumCallback"  },  {    "group": "operate",    "type": "方法",    "url": "$page.setTurn(obj)",    "title": "配置翻页",    "description": "<p>打开新页面</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "obj",            "description": "<p>条件列表{keys,pageNum,sleepTime,isLocation,condition}</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "keys",            "description": "<p>匹配页面标签</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "pageNum",            "description": "<p>当前页面编号,默认0</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "sleepTime",            "description": "<p>延迟时间,默认1000ms</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isLocation",            "description": "<p>是否在原页面执行,默认0</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "condition",            "description": "<p>执行条件，默认为1</p>"          }        ]      },      "examples": [        {          "title": "obj",          "content": "let obj={\n   baidu:v=>$page.setParams({page:v+1}),\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$page.setTurn(obj)\n$page.turn('baidu',0,500,false)",          "type": "/"        },        {          "title": "返回",          "content": "//打开新页面 http://www.baidu.com?page=1",          "type": "/"        },        {          "title": "延伸",          "content": "//配合页面函数doWhile,配置anotherPage:1,可以连环产生新页面，从而实现自动翻页",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./WC.js",    "groupTitle": "operate",    "name": "__PageSetturnObj"  }] });
