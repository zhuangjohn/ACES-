[  {    "group": "000",    "type": "方法",    "url": "require",    "title": "导入",    "description": "<p>引入框架，并构造原型</p>",    "success": {      "examples": [        {          "title": "执行",          "content": "let originPath = '/Users/zhuangzhuangwu/Documents/GitHub' //文件路径\nlet $work = require(originPath + '/cityWatcher/johnAPI/localServer').ls",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./localServer.js",    "groupTitle": "000",    "name": "__Require"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_WC/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_WC_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_WC_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_johnAPI/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnAPI_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnAPI_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_johnFlow/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnFlow_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_johnFlow_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./apidoc_ls/main.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_ls_main_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__apidoc_ls_main_js",    "name": ""  },  {    "version": "1.0.0",    "type": "",    "url": "",    "filename": "./localServer.js",    "group": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__localServer_js",    "groupTitle": "_Users_zhuangzhuangwu_Documents_GitHub_ACES__localServer_js",    "name": ""  },  {    "group": "ajax",    "type": "方法",    "url": "$ls.ajax(option,callback)",    "title": "本地restful请求",    "description": "<p>本地发起请求，通过回调计算结果</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "option",            "description": "<p>请求配置</p>"          },          {            "group": "Parameter",            "type": "Function",            "optional": false,            "field": "callback",            "description": "<p>回调函数</p>"          }        ]      },      "examples": [        {          "title": "option",          "content": "let option={\n url:'http://www.baidu.com',\n method:'get',\n}\nlet callback=function(data,res){\n console.log(data,res)\n}",          "type": "Json"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$ls.ajax(option,callback)",          "type": "/"        },        {          "title": "返回",          "content": "//请求结果",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./localServer.js",    "groupTitle": "ajax",    "name": "__LsAjaxOptionCallback"  },  {    "group": "createDom",    "type": "方法",    "url": "createDom",    "title": "创建虚拟Dom",    "description": "<p>构造本地虚拟Dom,返回Promise,可调用参数($,document)</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "htmlStr",            "description": "<p>初始虚拟dom代码</p>"          }        ]      },      "examples": [        {          "title": "htmlStr ",          "content": "let htmlStr=`<!DOCTYPE html><html><body><p>23</p></body></html>`",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$ls.createDom(htmlStr).then(($,dom)=>{\nconsole.log($('body').text())\n})",          "type": "/"        },        {          "title": "返回",          "content": "23",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./localServer.js",    "groupTitle": "createDom",    "name": "__Createdom"  },  {    "group": "file",    "type": "方法",    "url": "$ls.file(type,query)",    "title": "文件处理",    "description": "<p>根据文件路径进行复杂操作,返回Promise</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>操作类型，包括renameUnique,readAll,readNext,readDir</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "query",            "description": "<p>文件夹参数，多数为{dir},也可以直接传入字符串路径</p>"          }        ]      },      "examples": [        {          "title": "type",          "content": "let type='readAll'\n//renameUnique 如果文件已存在，则递增版本，增加后缀v-xx\n//readAll 读取目标文件夹的所有文件\n//readNext 读取./files下的一级目录\n//readDir 读取文件夹内的文件夹目录\n//doClusterRead 导流读取文件，用于大文件读取，读取结束返回end\n//delStrong 删除目标文件夹内所有文件\n//delOne 删除./files下的文件/文件夹\n//delEmptyDir 删除目标文件夹内的所有空文件夹\n//createDir 如果文件夹不存在则创建文件夹",          "type": "String"        }      ]    },    "success": {      "examples": [        {          "title": "执行",          "content": "$ls.file('readAll',{dir:'./'}).then(res=>{console.log(res)})",          "type": "/"        },        {          "title": "返回",          "content": "[ { isDir: false,\n  fileName: 'text.png',\n  filePath: '/Users/zhuangzhuangwu/Desktop/未命名文件夹/text.png',\n  extname: '.png' } ]",          "type": "/"        }      ]    },    "version": "0.0.0",    "filename": "./localServer.js",    "groupTitle": "file",    "name": "__LsFileTypeQuery"  }]
